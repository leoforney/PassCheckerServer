plugins {
    id 'com.devsoap.vaadin-flow' version '1.0.0.RC3'
    id 'org.springframework.boot' version '2.1.1.RELEASE'
}

vaadin.autoconfigure()

group 'tk.leoforney'
version '0.5-ALPHA'

apply plugin: 'java'
apply plugin: 'io.spring.dependency-management'

sourceCompatibility = 1.8

repositories {
    mavenCentral()
    jcenter()
}

dependencies {
    testImplementation group: 'junit', name: 'junit', version: '4.12'
    implementation "com.sparkjava:spark-core:2.7.2"
    implementation "org.xerial:sqlite-jdbc:3.21.0"
    implementation "com.google.code.gson:gson:2.8.4"
    implementation "com.vaadin:vaadin-app-layout-flow:1.0.3"
    implementation "commons-codec:commons-codec:1.11"
    compile ('org.vaadin.marcus:shortcut:0.3.0') {
        exclude group: 'org.slf4j', module: 'slf4j-simple'
    }
}

jar {
    vaadin.productionMode=true
    vaadin.submitStatistics=false
    manifest {
        attributes ( 'Main-Class': 'tk.leoforney.passcheckerserver.Main' )
    }
    from {
        configurations.compile.collect { (it.isDirectory() && it.name != "PassChecker.db") ? it : zipTree(it) }
    }

}

task createProperties(dependsOn: processResources) {
    doLast {
        new File("$buildDir/resources/main/version.properties").withWriter { w ->
            Properties p = new Properties()
            p['version'] = project.version.toString()
            p.store w, null
        }
    }
}

classes {
    dependsOn createProperties
}